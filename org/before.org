* Before

  Using the C-API, a simple record stream such as this:

  #+NAME: compound.h
  #+BEGIN_EXAMPLE
  /* We write this. */
  typedef struct s1_t {
    int    a_name;
    float  b_name;
    double c_name;
  } s1_t;

  /* ... and read this. */
  typedef struct s2_t {
    double c_name;
    int    a_name;
  } s2_t;
  #+END_EXAMPLE

  Can be written and read back as follows:

  #+HEADERS: :results output :exports both
  #+HEADERS: :includes '(<compound.h> <hdf5.h>) :flags "-I./" :libs "-lhdf5"
  #+BEGIN_SRC C
  s1_t       s1[10];               /* buffer to be written */
  s2_t       s2[10];               /* read buffer */
  hid_t      s1_tid, s2_tid;       /* Memory datatype handle */
  hid_t      file, dataset, space; /* Handles */
  hsize_t    dim[] = {10};         /* Dataspace dimensions */
  size_t     i;

  /* Create the file. */
  file = H5Fcreate("before.h5", H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT);

  /* Create the memory data type. */
  s1_tid = H5Tcreate (H5T_COMPOUND, sizeof(s1_t));
  H5Tinsert(s1_tid, "a_name", HOFFSET(s1_t, a_name), H5T_STD_I32LE);
  H5Tinsert(s1_tid, "c_name", HOFFSET(s1_t, c_name), H5T_IEEE_F64LE);
  H5Tinsert(s1_tid, "b_name", HOFFSET(s1_t, b_name), H5T_IEEE_F32LE);
  /* Create the data space. */
  space = H5Screate_simple(1, dim, NULL);
  /* Create the dataset. */
  dataset = H5Dcreate2(file, "ArrayOfStructures", s1_tid, space,
                       H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);

  /* Write a few important values. */
  for (i = 0; i< 10; i++) {
    s1[i].a_name = i;
    s1[i].b_name = i*i;
    s1[i].c_name = 1./(i+1);
   }

  /* Write data to the dataset; */
  H5Dwrite(dataset, s1_tid, H5S_ALL, H5S_ALL, H5P_DEFAULT, s1);

  /*  Release the datatype and dataspace resources */
  H5Tclose(s1_tid);
  H5Sclose(space);

  /* Read it back */
  s2_tid = H5Tcreate (H5T_COMPOUND, sizeof(s2_t));
  H5Tinsert(s2_tid, "c_name", HOFFSET(s2_t, c_name), H5T_NATIVE_DOUBLE);
  H5Tinsert(s2_tid, "a_name", HOFFSET(s2_t, a_name), H5T_NATIVE_INT);

  H5Dread(dataset, s2_tid, H5S_ALL, H5S_ALL, H5P_DEFAULT, s2);

  printf("reading back data previously written:\n\t");
  for (i = 0; i < 10; ++i)
      printf("%g ", s2[i].c_name);
  printf("\n");

  /*  Release the datatype and dataspace resources */
  H5Dclose(dataset);
  H5Fclose(file);
  #+END_SRC

  #+BEGIN_SRC shell :results output :exports both
  h5dump before.h5
  #+END_SRC
